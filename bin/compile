#!/usr/bin/env bash

set -e

build_dir="$1"
cache_dir="$2"
prerelease_vendor_dir="$build_dir/vendor"
postrelease_vendor_dir="/app/vendor"

lpsolve_build_dir="$build_dir/lpsolve"
lpsolve_cache_dir="$cache_dir/lpsolve"
lpsolve_prerelease_vendor_dir="$prerelease_vendor_dir/lpsolve"
lpsolve_postrelease_dest_dir="$postrelease_vendor_dir/lpsolve"

VERSION="5.5.0.10i"

status() {
  echo "-----> $*"
}

mkdir -p $lpsolve_build_dir
mkdir -p $lpsolve_cache_dir/bin
mkdir -p $lpsolve_prerelease_vendor_dir

if [[ -f $lpsolve_cache_dir/bin/lp_solve ]]; then
  status "Installing lpsolve $VERSION"
  cp -R $lpsolve_cache_dir/* $lpsolve_prerelease_vendor_dir
else
  status "Downloading and installing lpsolve $VERSION"
  curl 'http://bashdb.sourceforge.net/lpsolve-5.5.0.10i.tar.bz2' -o - | tar xjf - -C $lpsolve_build_dir
  cd $lpsolve_build_dir/lpsolve-5.5.0.10i
  ./configure --prefix=$lpsolve_prerelease_vendor_dir && make && make check && make install
  cp -R $lpsolve_prerelease_vendor_dir/* $lpsolve_cache_dir
fi

if [[ -f $build_dir/Gemfile ]]; then
  status "Configuring Bundler to find lpsolve"
  mkdir -p $build_dir/.bundle
  if [[ ! -f $build_dir/.bundle/config ]]; then
    echo "---\n" > $build_dir/.bundle/config
  fi
  echo "BUNDLE_BUILD__RB-LPSOLVE: \"--with-lpsolve-lib=$lpsolve_postrelease_dest_dir/lib --with-lpsolve-include=$lpsolve_postrelease_dest_dir/include\"" >> $build_dir/.bundle/config
fi
